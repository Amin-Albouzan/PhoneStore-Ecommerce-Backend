// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UsersService.Repositories;

#nullable disable

namespace UsersService.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241226144306_updateTotalPrice")]
    partial class updateTotalPrice
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("UsersService.Models.CartData", b =>
                {
                    b.Property<int>("Cart_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Cart_ID"));

                    b.Property<string>("Product_Discription")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Product_ID")
                        .HasColumnType("int");

                    b.Property<string>("Product_ImageUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Product_Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Product_Price")
                        .HasColumnType("double");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("User_ID")
                        .HasColumnType("int");

                    b.HasKey("Cart_ID");

                    b.ToTable("CartData");
                });

            modelBuilder.Entity("UsersService.Models.CartSummary", b =>
                {
                    b.Property<int?>("total_products")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("cart_summary", (string)null);
                });

            modelBuilder.Entity("UsersService.Models.TotalPrice", b =>
                {
                    b.Property<double?>("total_price")
                        .HasColumnType("double");

                    b.ToTable((string)null);

                    b.ToView("total_price", (string)null);
                });

            modelBuilder.Entity("UsersService.Models.UserData", b =>
                {
                    b.Property<int>("User_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("User_ID"));

                    b.Property<string>("User_Adress")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("User_Email")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("User_Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("User_Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("User_PhoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("User_Surname")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("User_ID");

                    b.HasIndex("User_Email")
                        .IsUnique();

                    b.ToTable("UserData");
                });
#pragma warning restore 612, 618
        }
    }
}
